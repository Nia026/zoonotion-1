generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id          Int      @id @default(autoincrement())
  username    String   @unique(map: "username") @db.VarChar(255)
  email       String   @unique(map: "email") @db.VarChar(255)
  password    String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(0)
  is_verified Boolean? @default(false)
  otp_code    String?  @db.VarChar(10)
}

model articles {
  id             Int       @id @default(autoincrement())
  judul_artikel  String    @db.VarChar(255)
  isi_artikel    String?   @db.LongText
  gambar_artikel String?   @db.VarChar(255)
  nama_author    String    @db.VarChar(255)
  publish_date   DateTime? @default(dbgenerated("(curdate())")) @db.Date
  created_at     DateTime  @default(now()) @db.Timestamp(0)
}

model communities {
  id                  Int         @id @default(autoincrement())
  banner_komunitas    String?     @db.VarChar(255)
  nama_komunitas      String      @unique(map: "nama_komunitas") @db.VarChar(255)
  nama_penyelenggara  String?     @db.VarChar(255)
  tahun_penyelenggara Int?        @db.Year
  deskripsi_komunitas String?     @db.Text
  created_at          DateTime    @default(now()) @db.Timestamp(0)
  galleries           galleries[]
}

model educations {
  id              Int                       @id @default(autoincrement())
  nama_hewan      String                    @db.VarChar(255)
  deskripsi_hewan String?                   @db.Text
  kategori_hewan  educations_kategori_hewan
  gambar_hewan    String?                   @db.VarChar(255)
  created_at      DateTime                  @default(now()) @db.Timestamp(0)
}

model galleries {
  id               Int         @id @default(autoincrement())
  community_id     Int
  gambar_galeri    String?     @db.VarChar(255)
  deskripsi_gambar String?     @db.Text
  created_at       DateTime    @default(now()) @db.Timestamp(0)
  communities      communities @relation(fields: [community_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "galleries_ibfk_1")

  @@index([community_id], map: "community_id")
}

model users {
  id          Int      @id @default(autoincrement())
  username    String   @db.VarChar(100)
  email       String   @unique(map: "email") @db.VarChar(100)
  password    String   @db.VarChar(255)
  otp_code    String?  @db.VarChar(10)
  is_verified Boolean? @default(false)
  role        String?  @default("user") @db.VarChar(20)
  created_at  DateTime @default(now()) @db.Timestamp(0)

  user_profiles user_profiles[]
}

model zoos {
  id                       Int      @id @default(autoincrement())
  nama_kebun_binatang      String   @unique(map: "nama_kebun_binatang") @db.VarChar(255)
  deskripsi_kebun_binatang String?  @db.Text
  link_web_resmi           String?  @db.VarChar(255)
  link_tiket               String?  @db.VarChar(255)
  created_at               DateTime @default(now()) @db.Timestamp(0)
  gambar_zoo               String?  @db.VarChar(255)
}

model user_profiles {
  id            Int      @id @default(autoincrement())
  user_id       Int
  username      String?  @db.VarChar(100)
  email         String?  @db.VarChar(100)
  foto_profil   String?  @db.VarChar(255)
  tanggal_lahir DateTime? @db.Date
  alamat        String?  @db.Text
  noted         String?  @db.Text

  users         users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

enum educations_kategori_hewan {
  Aves
  Mamalia
  Pisces
  Amfibi
  Reptil
}
